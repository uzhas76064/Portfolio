/*Variables*/

/*Mixins*/

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

html {
  font-size: 16px;
  overflow-x: hidden;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  font-family: 'Open Sans', sans-serif;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

header {
  width: 100%;
  color: white;
}

header .header-container {
  text-transform: uppercase;
  background: #02918C;
  width: inherit;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

header .header-container h2 {
  font-weight: 800;
  font-size: 26px;
  padding: 17px 49px 22px 49px;
}

header .header-container mark {
  color: #CFC91D;
  background: none;
}

nav {
  padding: 17px 49px 22px 49px;
  font-size: 15px;
  font-weight: 800;
}

nav li {
  display: inline-block;
  padding-right: 50px;
}

nav li :last-child {
  padding-right: 0;
}

nav li a {
  text-decoration: none;
  color: white;
}

.web-developer {
  background: url("../img/web_developer.jpg") no-repeat;
  background-size: cover;
  text-align: center;
}

.web-developer .hgroup {
  padding-top: 205px;
  color: white;
}

.web-developer .hgroup h3 {
  font-size: 1.875rem;
  padding-bottom: 15px;
}

.web-developer .hgroup h1 {
  font-size: 3.25rem;
  letter-spacing: 1.375rem;
  text-transform: uppercase;
}

.web-developer .hgroup h4 {
  padding-bottom: 45px;
  font-size: 1.125rem;
  font-weight: 600;
  padding-top: 10px;
}

.web-developer .know-more {
  text-align: -webkit-center;
  text-align: -moz-center;
  padding-bottom: 210px;
}

.web-developer .know-more img {
  width: 50px;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  padding-right: 50px;
  cursor: pointer;
}

.web-developer .know-more button {
  text-transform: uppercase;
  display: block;
  padding: 13px 16px;
  font-weight: 800;
  background: #CFC91D;
  color: black;
  border: none;
  width: 197px;
  cursor: pointer;
}

.about-me {
  max-width: 1187px;
  margin: 100px auto;
}

.description {
  text-align: -webkit-center;
  line-height: 40px;
  font-size: 1rem;
  color: #7e8287;
  margin-bottom: 75px;
}

.description strong {
  font-weight: bolder;
  font-size: 23px;
}

.description h2 {
  padding-bottom: 25px;
  font-size: 2.875rem;
  font-weight: 800;
  text-transform: uppercase;
  color: #02918C;
}

.description .decoration {
  padding-bottom: 25px;
}

.about-me-functions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.about-me-functions .item {
  text-align: center;
  min-width: 290px;
  border-right: 1px solid #808080;
}

.about-me-functions .item h3 {
  padding-bottom: 25px;
  font-size: 1rem;
  font-weight: 600;
  line-height: 23px;
}

.about-me-functions .item p {
  font-size: 0.875rem;
  line-height: 21px;
  color: #7e8287;
  padding-bottom: 40px;
}

.about-me-functions .item img {
  padding-bottom: 25px;
}

.about-me-functions :last-child {
  border: none;
}

.work-description {
  max-width: 1187px;
  margin: 0 auto;
  text-align: center;
  margin-bottom: 76px;
}

.work-description h2 {
  text-transform: uppercase;
  color: #02918C;
  font-weight: 800;
  font-size: 2.875rem;
}

.work-description .decoration {
  padding-top: 25px;
  padding-bottom: 25px;
}

.work-description .text {
  line-height: 41px;
  font-size: 1rem;
  font-weight: 400;
  color: #7e8287;
}

/* figure {
    display: inline-block;
    width: 100%;
} */

/* .projects {
    display: flex;
    flex-wrap: wrap;
}

 */

.contact-me {
  margin-top: 95px;
  margin-bottom: 70px;
}

.contact {
  text-align: center;
}

.contact h2 {
  text-transform: uppercase;
  color: #02918C;
  font-size: 2.875rem;
  font-weight: 800;
}

.contact .decoration {
  padding-top: 25px;
  padding-bottom: 25px;
}

.contact .text {
  line-height: 41px;
  font-weight: 400;
  color: #7e8287;
}

@media screen and (max-width: 360px) {
  html {
    font-size: 14px;
  }

  .web-developer .hgroup h1 {
    letter-spacing: normal;
  }

  .about-me-functions .item {
    border: none;
  }

  .col {
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    /* margin: 20px; */
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
